package desafio.ubot.avaliafilmes.view;import desafio.ubot.avaliafilmes.controller.FilmeService;import desafio.ubot.avaliafilmes.model.document.Filme;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import org.springframework.web.servlet.function.ServerResponse;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;@RestControllerpublic class FilmeRestController {    public static String nome = "filme";    @Autowired    FilmeService filmeService;    @GetMapping(value = "/")    public Flux<Filme> findAll(){        return filmeService.findAll();    }    @PostMapping(value = "/save")    public Mono<Filme> save(@RequestBody Filme filme){        return filmeService.save(filme);    }    @GetMapping(value = "/{filmeId}")    public Mono<ResponseEntity<Filme>> findById(@PathVariable Integer filmeId){        return filmeService.findById(filmeId);    }    @PutMapping(value = "/update")    public Mono<ResponseEntity<Filme>> update(@RequestBody Filme filme){        return filmeService.update(filme);    }    @DeleteMapping(value = "/delete/{filmeId}")    public Mono<ResponseEntity<Void>> delete(@PathVariable Integer filmeId){        return filmeService.delete(filmeId);    }    @PatchMapping(value = "/nota/{filmeId}")    public Mono<ResponseEntity<Filme>> darNota(@PathVariable Integer filmeId, @RequestParam Integer nota){        return filmeService.darNota(filmeId, nota);    }    @GetMapping(value = "/indicacao")    public Mono<Filme> indicacao(){        return filmeService.indicacao();    }}